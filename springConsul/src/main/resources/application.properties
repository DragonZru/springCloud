spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=

spring.datasource.url=jdbc:mysql://127.0.0.1:3306/example?useUnicode=true&useJDBCCompliantTimezoneShift=true&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=cryStal1
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# 启用路由发现匹配功能，自动从服务注册中心中获取服务列表
# ？？开启之后 自定义gateway filter 不起作用，注释不影响使用 - 可能版本问题，gateway工程使用正常
#spring.cloud.gateway.discovery.locator.enabled=true

# 启用 HTTP 请求和响应的日志记录,通常用于调试目的
spring.cloud.gateway.httpclient.wiretap=false

# 使用 XForwardedRemoteAddressResolver 解析远程客户端地址
spring.cloud.gateway.forwarded.remote-address-resolver=x-forwarded
# 设置最大允许的 IP 地址数量
spring.cloud.gateway.forwarded.max-trusted-index=1

# 使用consul 服务发现
spring.cloud.gateway.routes[0].id=useConsul
# consumer - 注册服务名
spring.cloud.gateway.routes[0].uri=lb://consumer
# 请求路径以/consumer进行处理
spring.cloud.gateway.routes[0].predicates[0]=Path=/consumer/**
# 截取第一个str  /consumer/**   ==>  /**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1
# 自定义登陆拦截器
spring.cloud.gateway.routes[0].filters[1]=Auth=true